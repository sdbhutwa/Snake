{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","field.ts","game.ts","globals.ts","main.ts","painter.ts","random.ts","snake.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\r\nimport { Painter } from \"./painter\";\r\nimport { getRandomInt } from \"./random\";\r\n\r\nexport enum FieldSize\r\n{\r\n    Width = 20, Height = 20\r\n}\r\n\r\nexport enum BlockSize\r\n{\r\n    Width = 10, Height = 10\r\n}\r\n\r\nexport enum BlockType\r\n{\r\n    Empty, SnakeBlock, Fruit\r\n}\r\n\r\nexport class Field\r\n{\r\n    private _m: any[] = [];\r\n\r\n    public constructor()\r\n    {\r\n        for (let y = 0; y < FieldSize.Height; ++y)\r\n        {\r\n            let columns: BlockType[] = [];\r\n            for (let x = 0; x < FieldSize.Width; ++x)\r\n            {\r\n                columns[x] = BlockType.Empty;\r\n            }\r\n            this._m[y] = columns;\r\n        }\r\n        this.NewFruit();\r\n    }\r\n\r\n    public SetBlock(type: BlockType, x: number, y: number)\r\n    {\r\n        this._m[y][x] = type;\r\n    }\r\n\r\n    public GetBlock(x: number, y: number): BlockType\r\n    {\r\n        return this._m[y][x];\r\n    }\r\n\r\n    public Draw(p: Painter): void\r\n    {\r\n        for (let y = 0; y < FieldSize.Height; ++y)\r\n        {\r\n            for (let x = 0; x < FieldSize.Width; ++x)\r\n            {\r\n                switch (this._m[y][x])\r\n                {\r\n                    case BlockType.Empty:\r\n                        break;\r\n                    case BlockType.SnakeBlock:\r\n                        p.Bar(x * BlockSize.Width + BlockSize.Width / 2,\r\n                            y * BlockSize.Height + BlockSize.Height / 2,\r\n                            BlockSize.Width - 1, BlockSize.Height - 1);\r\n                        break;\r\n                    case BlockType.Fruit:\r\n                        p.Circle(x * BlockSize.Width + BlockSize.Width / 2,\r\n                            y * BlockSize.Height + BlockSize.Height / 2, BlockSize.Width - 1);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public NewFruit(): void\r\n    {\r\n        let x: number;\r\n        let y: number;\r\n        do\r\n        {\r\n            x = getRandomInt(0, FieldSize.Width - 1);\r\n            y = getRandomInt(0, FieldSize.Height - 1);\r\n        } while (this.GetBlock(x, y) != BlockType.Empty);\r\n        this.SetBlock(BlockType.Fruit, x, y);\r\n    }\r\n}","\r\nimport { Painter } from \"./painter\";\r\nimport { Field } from \"./field\";\r\nimport { Snake, SnakeDirection } from \"./snake\";\r\n\r\nexport class Game\r\n{\r\n    private _field: Field = null;\r\n    private _snake: Snake = null;\r\n\r\n    public constructor()\r\n    {\r\n        this._field = new Field();\r\n        this._snake = new Snake();\r\n    }\r\n\r\n    public Tick(): void\r\n    {\r\n        if (!this._snake.Tick(this._field))\r\n        {\r\n            this._field = new Field();\r\n            this._snake = new Snake();\r\n        }\r\n    }\r\n\r\n    public Draw(p: Painter): void\r\n    {\r\n        this._field.Draw(p);\r\n    }\r\n\r\n    public KeyEvent(d: SnakeDirection)\r\n    {\r\n        this._snake.KeyEvent(d);\r\n    }\r\n}","\r\nexport let gl: WebGLRenderingContext = null;\r\nexport let simpleShaderProgram: WebGLProgram = null;\r\nexport let shaderVertexPositionAttribute: number;\r\nexport let u_FragColor: WebGLUniformLocation = null;\r\nexport let u_ModelTransform: WebGLUniformLocation = null;\r\nexport let u_ProjTransform: WebGLUniformLocation = null;\r\n\r\nlet gSquareVertexBuffer: WebGLBuffer = null;\r\n\r\nexport function initGL(canvas: HTMLCanvasElement): boolean\r\n{\r\n    // Get the rendering context\r\n    gl = getWebGLContext(canvas);\r\n    if (gl == null)\r\n    {\r\n        console.log(\"Failed to get the rendering context\");\r\n        return false;\r\n    }\r\n\r\n    initSquareBuffer();\r\n\r\n    if (!initSimpleShader(\"VertexShader\", \"FragmentShader\"))\r\n    {\r\n        return false;\r\n    }\r\n\r\n    u_FragColor = gl.getUniformLocation(simpleShaderProgram, \"u_FragColor\");\r\n    if (!u_FragColor)\r\n    {\r\n        console.log(\"Failed to get u_FragColor location\");\r\n        return false;\r\n    }\r\n\r\n    u_ModelTransform = gl.getUniformLocation(simpleShaderProgram, \"u_ModelTransform\");\r\n    if (!u_ModelTransform)\r\n    {\r\n        console.log(\"Failed to get u_ModelTransfrom location\");\r\n        return false;\r\n    }\r\n\r\n    u_ProjTransform = gl.getUniformLocation(simpleShaderProgram, \"u_ProjTransform\");\r\n    if (!u_ProjTransform)\r\n    {\r\n        console.log(\"Faile to get u_ProjTransform location\");\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction getWebGLContext(canvas: HTMLCanvasElement): WebGLRenderingContext\r\n{\r\n    let gl: WebGLRenderingContext = null;\r\n\r\n    try\r\n    {\r\n        gl = canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\");\r\n\r\n        if (gl == null)\r\n        {\r\n            throw \"Browser does not support WebGL\";\r\n        }\r\n    }\r\n    catch (e)\r\n    {\r\n        console.log(e);\r\n    }\r\n\r\n    return gl;\r\n}\r\n\r\nfunction initSquareBuffer(): void\r\n{\r\n    // Define the vertices for a square\r\n    let verticesOfSquare = [\r\n        0.5, 0.5, 0.0,\r\n        -0.5, 0.5, 0.0,\r\n        0.5, -0.5, 0.0,\r\n        -0.5, -0.5, 0.0,\r\n\r\n        0.0, 0.5, 0.0,\r\n        -0.5, 0.0, 0.0,\r\n        0.5, 0.0, 0.0,\r\n        0.0, -0.5, 0.0\r\n    ];\r\n\r\n    // Create a buffer on the gl context\r\n    gSquareVertexBuffer = gl.createBuffer();\r\n\r\n    // Activate vertexBuffer\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, gSquareVertexBuffer);\r\n\r\n    // Loads verticesOfSquare into the vertexBuffer\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verticesOfSquare), gl.STATIC_DRAW);\r\n}\r\n\r\nfunction initSimpleShader(vertexShaderID: string, fragmentShaderID: string): boolean\r\n{\r\n    // Load and compile vertex and fragment shaders\r\n    let vertexShader = loadAndCompileShader(vertexShaderID, gl.VERTEX_SHADER);\r\n    let fragmentShader = loadAndCompileShader(fragmentShaderID, gl.FRAGMENT_SHADER);\r\n    if (!vertexShader || !fragmentShader)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    // Create and link the shaders to a program\r\n    simpleShaderProgram = gl.createProgram();\r\n    gl.attachShader(simpleShaderProgram, vertexShader);\r\n    gl.attachShader(simpleShaderProgram, fragmentShader);\r\n    gl.linkProgram(simpleShaderProgram);\r\n\r\n    // Check for error\r\n    if (!gl.getProgramParameter(simpleShaderProgram, gl.LINK_STATUS))\r\n    {\r\n        console.log(\"Error linking shader\");\r\n        return false;\r\n    }\r\n\r\n    // Gets a reference to the a_Position variable within the shaders\r\n    shaderVertexPositionAttribute = gl.getAttribLocation(simpleShaderProgram, \"a_Position\");\r\n    if (shaderVertexPositionAttribute < 0)\r\n    {\r\n        console.log(\"Failed to get a reference to the a_Position variable\")\r\n        return false;\r\n    }\r\n\r\n    // Activates the vertex buffer\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, gSquareVertexBuffer);\r\n\r\n    // Discribe the characteristic of the vertex position attribute\r\n    gl.vertexAttribPointer(shaderVertexPositionAttribute,\r\n        3,          // each vertex element is a 3-float (x, y, z)\r\n        gl.FLOAT,   // data type is FLOAT\r\n        false,      // if the content is normalized vectors\r\n        0,          // number of bytes to skip in bitween elements\r\n        0           // offsets to the first element\r\n    );\r\n\r\n    return true;\r\n}\r\n\r\nfunction loadAndCompileShader(id: string, shaderType: number): WebGLShader\r\n{\r\n    // Get the shader source from index.html\r\n    let shaderText = document.getElementById(id);\r\n    let shaderSource = shaderText.firstChild.textContent;\r\n\r\n    // Create the shader based on the shader type: vertex or fragment\r\n    let compiledShader = gl.createShader(shaderType);\r\n\r\n    // Compile the created shader\r\n    gl.shaderSource(compiledShader, shaderSource);\r\n    gl.compileShader(compiledShader);\r\n\r\n    // Check for errors and return results (null if error)\r\n    if (!gl.getShaderParameter(compiledShader, gl.COMPILE_STATUS))\r\n    {\r\n        console.log(`A shader compiling error occured: ${gl.getShaderInfoLog(compiledShader)}`);\r\n        return null;\r\n    }\r\n\r\n    return compiledShader;\r\n}","\r\nimport { Painter } from \"./painter\";\r\nimport { Game } from \"./game\";\r\nimport { SnakeDirection } from \"./snake\";\r\n\r\nimport\r\n{\r\n    gl, initGL\r\n} from \"./globals\";\r\n\r\nlet game = new Game();\r\nlet painter = new Painter();\r\n\r\nfunction display()\r\n{\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    game.Draw(painter);\r\n}\r\n\r\nfunction timer()\r\n{\r\n    game.Tick();\r\n    display();\r\n}\r\n\r\nfunction keyEvent(event: KeyboardEvent)\r\n{\r\n    switch (event.keyCode)\r\n    {\r\n        case 65: // A\r\n        case 37: // Left Arrow\r\n            game.KeyEvent(SnakeDirection.Left);\r\n            break;\r\n        case 87: // W\r\n        case 38: // Up Arrow\r\n            game.KeyEvent(SnakeDirection.Up);\r\n            break;\r\n        case 68: // D\r\n        case 39: // Right Arrow\r\n            game.KeyEvent(SnakeDirection.Right);\r\n            break;\r\n        case 83: // S\r\n        case 40: // Down Arrow\r\n            game.KeyEvent(SnakeDirection.Down);\r\n            break;\r\n    }\r\n}\r\n\r\nfunction main()\r\n{\r\n    // Retrieve the canvas element\r\n    let canvas = document.getElementById(\"renderCanvas\") as HTMLCanvasElement;\r\n    if (canvas == null)\r\n    {\r\n        console.log(\"Failed to retrieve the canvas element\");\r\n        return;\r\n    }\r\n\r\n    // Initialize GL\r\n    if (!initGL(canvas))\r\n    {\r\n        console.log(\"Failed to initialize GL\");\r\n        return;\r\n    }\r\n\r\n    gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n\r\n    window.addEventListener(\"keydown\", keyEvent);\r\n\r\n    setInterval(timer, 300);\r\n}\r\n\r\nmain();\r\n","/// <reference path=\"./lib/gl-matrix.d.ts\" />\r\n\r\nimport { FieldSize, BlockSize } from \"./field\";\r\n\r\nimport\r\n{\r\n    gl, simpleShaderProgram,\r\n    shaderVertexPositionAttribute,\r\n    u_FragColor, u_ModelTransform,\r\n    u_ProjTransform\r\n} from \"./globals\";\r\n\r\nexport class Painter\r\n{\r\n    public Bar(x: number, y: number, width: number, height: number): void\r\n    {\r\n        this.ActiveShader([0.0, 1.0, 0.0, 1.0]);\r\n        this.SetProjectionMatrix();\r\n        this.Transform(x, y, width, height);\r\n\r\n        // Draw with the above settings\r\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n    }\r\n\r\n    public Circle(x: number, y: number, diameter: number): void\r\n    {\r\n        this.ActiveShader([1.0, 0.0, 0.0, 1.0]);\r\n        this.SetProjectionMatrix();\r\n        this.Transform(x, y, diameter, diameter);\r\n\r\n        // Draw with the above settings\r\n        gl.drawArrays(gl.TRIANGLE_STRIP, 4, 4);\r\n    }\r\n\r\n    private SetProjectionMatrix()\r\n    {\r\n        let projMatrix = mat4.create();\r\n        mat4.ortho(projMatrix,\r\n            0, FieldSize.Width * BlockSize.Width,\r\n            FieldSize.Height * BlockSize.Width, 0, 1, -1);\r\n        gl.uniformMatrix4fv(u_ProjTransform, false, projMatrix);\r\n    }\r\n\r\n    private ActiveShader(color: number[])\r\n    {\r\n        // Enable the shader to use\r\n        gl.useProgram(simpleShaderProgram);\r\n\r\n        // Enable the vertex position attribute\r\n        gl.enableVertexAttribArray(shaderVertexPositionAttribute);\r\n\r\n        // Set Color\r\n        gl.uniform4fv(u_FragColor, color);\r\n    }\r\n\r\n    private Transform(x: number, y: number, w: number, h: number)\r\n    {\r\n        // Creates a blank identity matrix\r\n        let matrix = mat4.create();\r\n\r\n        // Compute translation and scaling\r\n        mat4.translate(matrix, matrix, vec3.fromValues(x, y, 0.0));\r\n        //mat4.rotateZ(matrix, matrix, 0.0);\r\n        mat4.scale(matrix, matrix, vec3.fromValues(w, h, 1.0));\r\n\r\n        // Loads the modelTransform matrix into WebGL to be used by the vertex shader\r\n        gl.uniformMatrix4fv(u_ModelTransform, false, matrix);\r\n    }\r\n}","/**\r\n * Get a random floating point number between `min` and `max`.\r\n * \r\n * @param {number} min - min number\r\n * @param {number} max - max number\r\n * @return {float} a random floating point number\r\n */\r\nexport function getRandom(min, max)\r\n{\r\n    return Math.random() * (max - min) + min;\r\n}\r\n\r\n/**\r\n * Get a random integer between `min` and `max`.\r\n * \r\n * @param {number} min - min number\r\n * @param {number} max - max number\r\n * @return {int} a random integer\r\n */\r\nexport function getRandomInt(min, max)\r\n{\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","\r\nimport { Field, FieldSize, BlockType } from \"./field\";\r\nimport { getRandomInt } from \"./random\";\r\n\r\nexport enum SnakeDirection\r\n{\r\n    Left, Up, Right, Down\r\n}\r\n\r\nexport class Snake\r\n{\r\n    private _snakeBlocks: { x: number, y: number }[] = [];\r\n    private _direction: SnakeDirection;\r\n    private _lastMove: SnakeDirection;\r\n\r\n    public constructor()\r\n    {\r\n        this._snakeBlocks.push({ x: FieldSize.Width / 2, y: FieldSize.Height / 2 });\r\n        this._direction = getRandomInt(0, 3) as SnakeDirection;\r\n        this._lastMove = this._direction;\r\n    }\r\n\r\n    public Tick(field: Field): boolean\r\n    {\r\n        this._lastMove = this._direction;\r\n        let p = Object.create(this._snakeBlocks[0]);\r\n\r\n        switch (this._direction)\r\n        {\r\n            case SnakeDirection.Left:\r\n                p.x--;\r\n                break;\r\n            case SnakeDirection.Up:\r\n                p.y--;\r\n                break;\r\n            case SnakeDirection.Right:\r\n                p.x++;\r\n                break;\r\n            case SnakeDirection.Down:\r\n                p.y++;\r\n                break;\r\n        }\r\n\r\n        if (p.x < 0 || p.x >= FieldSize.Width || p.y < 0 || p.y >= FieldSize.Height)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        if (field.GetBlock(p.x, p.y) == BlockType.SnakeBlock)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        this._snakeBlocks.unshift(p);\r\n\r\n        if (field.GetBlock(p.x, p.y) != BlockType.Fruit)\r\n        {\r\n            field.SetBlock(BlockType.SnakeBlock, p.x, p.y);\r\n            let x = this._snakeBlocks[this._snakeBlocks.length - 1].x;\r\n            let y = this._snakeBlocks[this._snakeBlocks.length - 1].y;\r\n            field.SetBlock(BlockType.Empty, x, y);\r\n            this._snakeBlocks.pop();\r\n        }\r\n        else\r\n        {\r\n            field.SetBlock(BlockType.SnakeBlock, p.x, p.y);\r\n            field.NewFruit();\r\n        }\r\n\r\n        if (this._snakeBlocks.length >= FieldSize.Width * FieldSize.Height - 1)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public KeyEvent(d: SnakeDirection)\r\n    {\r\n        if (d == this._direction)\r\n        {\r\n            return;\r\n        }\r\n\r\n        switch (d)\r\n        {\r\n            case SnakeDirection.Left:\r\n                if (this._lastMove == SnakeDirection.Right)\r\n                {\r\n                    return;\r\n                }\r\n                break;\r\n            case SnakeDirection.Up:\r\n                if (this._lastMove == SnakeDirection.Down)\r\n                {\r\n                    return;\r\n                }\r\n                break;\r\n            case SnakeDirection.Right:\r\n                if (this._lastMove == SnakeDirection.Left)\r\n                {\r\n                    return;\r\n                }\r\n                break;\r\n            case SnakeDirection.Down:\r\n                if (this._lastMove == SnakeDirection.Up)\r\n                {\r\n                    return;\r\n                }\r\n                break;\r\n        }\r\n\r\n        this._direction = d;\r\n    }\r\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}
